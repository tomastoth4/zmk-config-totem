//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#define ZMK_POINTING_DEFAULT_MOVE_VAL 750
#define ZMK_POINTING_DEFAULT_SCRL_VAL 12
#include <dt-bindings/zmk/pointing.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
           &kp Q            &kp W           &kp E         &kp R             &kp T        &kp Y      &kp U              &kp I                &kp O            &kp P
           &mt LEFT_META A  &mt LEFT_ALT S  &mt LCTRL D   &mt LEFT_SHIFT F  &kp G        &kp H      &mt RIGHT_SHIFT J  &mt RIGHT_CONTROL K  &mt RIGHT_ALT L  &mt RIGHT_META SEMI
&kp LCTRL  &kp Z            &kp X           &kp C         &kp V             &kp B        &kp N      &kp M              &kp COMMA            &kp DOT          &kp FSLH             &kp APOS
                                            &lt 5 ESCAPE  &lt 4 SPACE       &lt 1 TAB    &kp ENTER  &lt 2 BACKSPACE    &kp DELETE
            >;
        };

        mouse {
            bindings = <
       &none       &none              &none            &none             &none    &none           &none           &none         &none            &none
       &kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_PLAY_PAUSE  &none    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &none
&none  &none       &none              &none            &none             &none    &none           &none           &none         &none            &none  &none
                                      &none            &none             &none    &mkp RCLK       &mkp LCLK       &mkp MCLK
            >;
        };

        numbers {
            bindings = <
        &trans  &kp N7  &kp N8  &kp N9  &trans    &trans  &trans  &trans  &trans  &trans
        &trans  &kp N4  &kp N5  &kp N6  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp N1  &kp N2  &kp N3  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &kp N0  &trans    &trans  &trans  &trans
            >;
        };

        func {
            bindings = <
        &kp F12  &kp F7  &kp F8  &kp F9  &kp PRINTSCREEN    &trans  &trans  &trans  &trans  &trans
        &kp F11  &kp F4  &kp F5  &kp F6  &trans             &trans  &trans  &trans  &trans  &trans
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &trans             &trans  &trans  &trans  &trans  &trans  &trans
                         &trans  &trans  &trans             &trans  &trans  &trans
            >;
        };

        nav {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &trans    &trans          &trans        &trans     &trans
        &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &none
&trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans          &trans        &trans     &trans  &trans
                        &trans  &trans  &trans    &trans    &trans          &trans
            >;
        };

        media {
            bindings = <
        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans      &trans           &trans             &trans
        &trans        &trans        &trans        &trans        &trans          &trans  &kp C_PREV  &kp C_VOLUME_UP  &kp C_VOLUME_DOWN  &kp C_NEXT
&trans  &trans        &trans        &trans        &trans        &trans          &trans  &trans      &trans           &trans             &trans      &trans
                                    &trans        &trans        &trans          &trans  &trans      &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        device {
            if-layers = <1 1>;
            then-layer = <1>;
        };
    };
};
